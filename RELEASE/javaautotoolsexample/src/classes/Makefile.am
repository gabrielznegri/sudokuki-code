JAVAROOT = $(top_builddir)/src/classes
jarfile = $(top_builddir)/$(PACKAGE)-$(VERSION).jar
jardir = $(datadir)/java
jar_DATA = $(jarfile)

JAVA_HOME=@JAVA_HOME@
JAVAC=@JAVAC@
JAVAH=@JAVAH@
JAVA=@JAVA@
JAR=@JAR@
$(jarfile): $(dist_noinst_JAVA) $(HELLO_JNI_INCLUDE)
	$(JAR) cmf $(MANIFEST) $(JARFLAGS) $@ `find . -name "*.class"`

include DIST_NOINST_JAVA.include

$(dist_noinst_JAVA): updateAndCheckJavaFilesList mkversion manifest

updateAndCheckJavaFilesList:
	rm $(JAVAROOT)/new_DIST_NOINST_JAVA.include; \
	line="dist_noinst_JAVA = "; \
	for next in `find $(JAVAROOT) -name "*.java" && echo "THE_END"` ; do \
	  if test "$$next" != "THE_END"; then \
	    echo $$line" \\" >> $(JAVAROOT)/new_DIST_NOINST_JAVA.include; \
	    line=`echo "$$next" | sed "s/^.*src\/classes\/\(.*\)/\1 /"` ; \
	  else \
	    echo $$line >> $(JAVAROOT)/new_DIST_NOINST_JAVA.include; \
	  fi; \
	done; \
	diff $(JAVAROOT)/DIST_NOINST_JAVA.include $(JAVAROOT)/new_DIST_NOINST_JAVA.include; \
	if test false = true; then \
	  echo "DIST_NOINST_JAVA.include is too old, replace it with new_DIST_NOINST_JAVA.include and try again."; \
	fi

dist-local: 

clean-local: rmclassfiles

rmclassfiles:
	find $(JAVAROOT) -name "*.class" -exec rm {} \;

MANIFEST=$(JAVAROOT)/MANIFEST.MF
manifest:
	echo "Manifest-Version: 1.0" > $(MANIFEST); \
	echo "Main-Class: net.jankenpoi.autotoolsexample.Main" >> $(MANIFEST);

VERSION_DIR=$(JAVAROOT)/net/jankenpoi/autotoolsexample
VERSION_FILE=$(VERSION_DIR)/Version.java

mkversion:
	mkdir -p $(VERSION_DIR); \
	touch $(VERSION_FILE); \
	echo "/**" > $(VERSION_FILE); \
	echo " * -- DO NOT EDIT THIS FILE --" >> $(VERSION_FILE); \
	echo " * This file is generated automatically during the build process" >> $(VERSION_FILE); \
	echo " * (./configure && make) based on the standard GNU Auto-tools." >> $(VERSION_FILE); \
	echo " */" >> $(VERSION_FILE); \
	echo "package net.jankenpoi.autotoolsexample;" >> $(VERSION_FILE); \
	echo "" >> $(VERSION_FILE); \
	echo "public interface Version {" >> $(VERSION_FILE); \
	echo "" >> $(VERSION_FILE); \
	echo "    public String versionString = \"JavaAutotoolsExample $(PACKAGE_VERSION)\";" >> $(VERSION_FILE); \
	echo "" >> $(VERSION_FILE); \
	echo "}" >> $(VERSION_FILE);

CLEANFILES = $(jarfile) $(VERSION_FILE) $(MANIFEST) $(HELLO_JNI_INCLUDE) new_DIST_NOINST_JAVA.include

HELLO_JNI_DIR=$(top_builddir)/src/classes/net/jankenpoi/autotoolsexample
HELLO_JNI_CLASS=net.jankenpoi.autotoolsexample.HelloWithJNI
HELLO_JNI_INCLUDE=$(top_builddir)/src/classes/net/jankenpoi/autotoolsexample/HelloWithJNI.h
$(HELLO_JNI_INCLUDE):
	$(JAVAH) -classpath $(top_builddir)/src/classes -jni -o $(HELLO_JNI_INCLUDE) $(HELLO_JNI_CLASS)

